stages:
  - test
  - build
  - publish
  - deploy_to_dev
  - deploy_to_stage

variables:
  DB_NAME: $DB_NAME
  DB_USER: $DB_USER
  DB_PASS: $DB_PASS
  DB_SERVER: $DB_SERVER
  JWT: $JWT

# test_server:
#   stage: test
#   image: node:latest
#   tags:
#     - she11
#   before_script:
#     - pwd
#     - npm install
#   script:
#     - pwd
#     - npx mocha test/routes/*.js

build_docker_image:
  stage: build
  tags:
    - she11
  before_script:
    - $IMAGE_VERSION = Get-Content version.txt
  script:
    - pwd
    - docker build -t ${CI_REGISTRY_IMAGE}:${IMAGE_VERSION}-build${CI_PIPELINE_IID} .
    - docker images
    - echo $DB_SERVER

push_to_registry:
  stage: publish
  tags:
    - she11
  needs:
    - build_docker_image
  before_script:
    - $IMAGE_VERSION = Get-Content version.txt
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  script:
    - pwd
    - docker push ${CI_REGISTRY_IMAGE}:${IMAGE_VERSION}-build${CI_PIPELINE_IID}
    - docker tag ${CI_REGISTRY_IMAGE}:${IMAGE_VERSION}-build${CI_PIPELINE_IID} ${CI_REGISTRY_IMAGE}:latest

.deploy_to:
  variables:
    THIS_SERVER_PRIVATE_KEY: ""
    THIS_SERVER_NAME: ""
    THIS_SERVER_IP: ""
    THIS_PROJECT_NAME: ""
    THIS_PROJECT_PORT: ""
  tags:
    - she11
  before_script:
    - Get-Service -Name ssh-agent | Set-Service -StartupType Manual
    - Start-Service ssh-agent
    - echo ${THIS_SERVER_PRIVATE_KEY} | ssh-add -
    - ssh ${THIS_SERVER_NAME}@${THIS_SERVER_IP} "sudo apt-get update && sudo apt-get install -y docker.io docker-compose"
  script:
    - scp -o StrictHostKeyChecking=no .\docker-compose.yml ${THIS_SERVER_NAME}@${THIS_SERVER_IP}:/root
    - pwd
    - dir
    - ssh -o StrictHostKeyChecking=no ${THIS_SERVER_NAME}@${THIS_SERVER_IP} "
    
      export COMPOSE_PROJECT_NAME=${THIS_PROJECT_NAME}
      export ADD_PORT=${THIS_PROJECT_PORT}
      
      docker-compose down &&
      docker-compose up -d"
  environment:
    name: ${THIS_PROJECT_NAME}
    url: http://${THIS_SERVER_IP}:${THIS_PROJECT_PORT}

deploy_to_server:
  stage: deploy_to_dev
  extends: .deploy_to
  variables:
    THIS_SERVER_PRIVATE_KEY: ${SERVER_PRIVATE_KEY}
    THIS_SERVER_NAME: ${SERVER_NAME}
    THIS_SERVER_IP: ${SERVER_IP}
    THIS_PROJECT_NAME: DEV
    THIS_PROJECT_PORT: 3000

deploy_to_staging:
  stage: deploy_to_stage
  extends: .deploy_to
  variables:
    THIS_SERVER_PRIVATE_KEY: ${SERVER_PRIVATE_KEY}
    THIS_SERVER_NAME: ${SERVER_NAME}
    THIS_SERVER_IP: ${SERVER_IP}
    THIS_PROJECT_NAME: STAGING
    THIS_PROJECT_PORT: 5000     
